@use 'sass:math';
@use 'sass:string';
//  Author: https://codepen.io/jakob-e/pen/doMoML
//  Function to create an optimized svg url
//  Version: 1.0.6
@function svg-url($svg) {
  //
  //  Add missing namespace
  //
  @if not string.index($svg, xmlns) {
    $svg: str-replace($svg, '<svg', '<svg xmlns="http://www.w3.org/2000/svg"');
  }
  //
  //  Chunk up string in order to avoid
  //  "stack level too deep" error
  //
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: math.ceil(math.div(string.length($svg), $slice));

  @for $i from 1 through $loops {
    $chunk: string.slice($svg, $index, $index + $slice - 1);
    //
    //   Encode
    //
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, '%', '%25');
    $chunk: str-replace($chunk, '#', '%23');
    $chunk: str-replace($chunk, '{', '%7B');
    $chunk: str-replace($chunk, '}', '%7D');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url('data:image/svg+xml,#{$encoded}');
}

//  Background svg mixin
@mixin background-svg($svg) {
  background-image: svg-url($svg);
}

//  Helper function to replace characters in a string
@function str-replace($string, $search, $replace: '') {
  $index: string.index($string, $search);

  @return if(
    $index,
    string.slice($string, 1, $index - 1) + $replace + str-replace(
      string.slice($string, $index + string.length($search)),
      $search,
      $replace
    ),
    $string
  );
}

/**
Enforces the value of a property passed to a mixin to be one of the provided valid values

Example:
$colors: ('red', 'blue', 'green', 'yellow');

.element {
  @include enforce-property-value('blue', $colors); // Valid value
  @include enforce-property-value('pruple', $colors); // Inalid value - throw error
}
**/

@mixin enforce-property-value($propertyValue, $validValues) {
  @if not index($validValues, $propertyValue) {
    @error "Invalid value for #{$propertyValue}. Use one of: #{join($validValues, ', ')}.";
  }
}
